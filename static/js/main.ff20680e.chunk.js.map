{"version":3,"sources":["images/logo-iossa-black.png","images/iossa.gif","Components/Fixer.js","hooks/input-hook.js","Components/Nav.js","Pages/Json.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Fixer","useState","team","setTeam","goals","setGoals","assists","setAssists","shots","setShots","shotsontarget","setShotsontarget","passes","setPasses","passescompleted","setPassescompleted","interceptions","setInterceptions","fouls","setFouls","redcards","setRedcards","yellowcards","setYellowcards","offsides","setOffsides","tackles","setTackles","tacklescompleted","setTacklescompleted","possession","setPossession","saves","setSaves","savescaught","setSavescaught","goalsconceded","setGoalsconceded","foulsSuffered","setFoulsSuffered","owngoals","setOwngoals","freekicks","setFreekicks","penalties","setPenalties","corners","setCorners","throwins","setThrowins","distance","setDistance","goalkicks","setGoalkicks","position","setPosition","startsecond","setStartsecond","endsecond","setEndsecond","minutes","setMinutes","initialValue","value","setValue","reset","bind","onChange","event","target","useInput","handleSubmit","evt","preventDefault","alert","className","onSubmit","type","e","style","textAlign","marginTop","Math","round","Nav","Navbar","bg","fixed","Brand","href","alt","src","require","width","height","Json","state","loading","match","steam","playerStatistics","switch","fetch","response","json","data","this","setState","teams","console","log","fontSize","display","marginLeft","marginRight","React","Component","document","title","description","App","Boolean","window","location","hostname","ReactDOM","render","path","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,mC,yGCwR5BC,MAnRf,WAAgB,MAGYC,mBAAS,GAHrB,gCAIYA,mBAAS,IAJrB,mBAILC,EAJK,KAICC,EAJD,OAKkBF,mBAAS,GAL3B,gCAMcA,mBAAS,IANvB,mBAMLG,EANK,KAMEC,EANF,OAOkBJ,mBAAS,GAP3B,gCAQkBA,mBAAS,IAR3B,mBAQLK,EARK,KAQIC,EARJ,OAScN,mBAAS,GATvB,mBASLO,EATK,KASEC,EATF,OAU8BR,mBAAS,GAVvC,mBAULS,EAVK,KAUUC,EAVV,OAWgBV,mBAAS,GAXzB,mBAWLW,EAXK,KAWGC,EAXH,OAYkCZ,mBAAS,GAZ3C,mBAYLa,EAZK,KAYYC,EAZZ,OAa8Bd,mBAAS,GAbvC,mBAaLe,EAbK,KAaUC,EAbV,OAcchB,mBAAS,GAdvB,mBAcLiB,EAdK,KAcEC,EAdF,OAeoBlB,mBAAS,GAf7B,mBAeLmB,EAfK,KAeKC,EAfL,OAgB0BpB,mBAAS,GAhBnC,mBAgBLqB,EAhBK,KAgBQC,EAhBR,OAiBoBtB,mBAAS,GAjB7B,oBAiBLuB,GAjBK,MAiBKC,GAjBL,SAkBkBxB,mBAAS,GAlB3B,qBAkBLyB,GAlBK,MAkBIC,GAlBJ,SAmBoC1B,mBAAS,GAnB7C,qBAmBL2B,GAnBK,MAmBaC,GAnBb,SAoBwB5B,mBAAS,GApBjC,qBAoBL6B,GApBK,MAoBOC,GApBP,SAqBc9B,mBAAS,GArBvB,qBAqBL+B,GArBK,MAqBEC,GArBF,SAsB0BhC,mBAAS,GAtBnC,qBAsBLiC,GAtBK,MAsBQC,GAtBR,SAuB8BlC,mBAAS,GAvBvC,qBAuBLmC,GAvBK,MAuBUC,GAvBV,SAwB8BpC,mBAAS,GAxBvC,qBAwBLqC,GAxBK,MAwBUC,GAxBV,SAyBoBtC,mBAAS,GAzB7B,qBAyBLuC,GAzBK,MAyBKC,GAzBL,SA0BsBxC,mBAAS,GA1B/B,qBA0BLyC,GA1BK,MA0BMC,GA1BN,SA2BsB1C,mBAAS,GA3B/B,qBA2BL2C,GA3BK,MA2BMC,GA3BN,SA4BkB5C,mBAAS,GA5B3B,qBA4BL6C,GA5BK,MA4BIC,GA5BJ,SA6BoB9C,mBAAS,GA7B7B,qBA6BL+C,GA7BK,MA6BKC,GA7BL,SA8B0BhD,mBAAS,GA9BnC,qCA+BoBA,mBAAS,IA/B7B,qBA+BLiD,GA/BK,MA+BKC,GA/BL,SAgCsBlD,mBAAS,GAhC/B,qBAgCLmD,GAhCK,MAgCMC,GAhCN,SAiCoBpD,mBAAS,GAjC7B,qBAiCLqD,GAjCK,MAiCKC,GAjCL,SAkC0BtD,mBAAS,GAlCnC,qBAkCLuD,GAlCK,MAkCQC,GAlCR,SAmCsBxD,mBAAS,GAnC/B,qBAmCLyD,GAnCK,MAmCMC,GAnCN,SAoC8B1D,mBAAS,GApCvC,qCAqCkBA,mBAAS,IArC3B,qBAqCL2D,GArCK,MAqCIC,GArCJ,SAsC4B5D,mBAAS,GAtCrC,qCCHQ,SAAA6D,GAAiB,IAAD,EACZ7D,mBAAS6D,GADG,mBAC/BC,EAD+B,KACxBC,EADwB,KAGtC,MAAO,CACLD,QACAC,WACAC,MAAO,kBAAMD,EAAS,KACtBE,KAAM,CACJH,QACAI,SAAU,SAAAC,GACRJ,EAASI,EAAMC,OAAON,UDiCKO,CAAS,KAAhCP,GAxCI,GAwCJA,MAAaE,IAxCT,GAwCGC,KAxCH,GAwCSD,OAEfM,GAAe,SAACC,GACpBA,EAAIC,iBACJC,MAAM,mBAAD,OAAoBX,KACzBE,MAGF,OACE,6BACE,6BACE,wBAAIU,UAAU,YACZ,2CACE,0BAAMC,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOP,GAAaW,SAAU,SAAAW,GAAC,OAAIrB,GAAeqB,EAAET,OAAON,aAIpF,yCACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOL,GAAWS,SAAU,SAAAW,GAAC,OAAInB,GAAamB,EAAET,OAAON,aAIhF,mCACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAO7D,EAAMiE,SAAU,SAAAW,GAAC,OAAI3E,EAAQ2E,EAAET,OAAON,aAItE,uCACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOT,GAAUa,SAAU,SAAAW,GAAC,OAAIvB,GAAYuB,EAAET,OAAON,aAI9E,0CACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAO3C,EAAU+C,SAAU,SAAAW,GAAC,OAAIzD,EAAYyD,EAAET,OAAON,aAI9E,6CACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOzC,EAAa6C,SAAU,SAAAW,GAAC,OAAIvD,EAAeuD,EAAET,OAAON,aAIpF,uCACC,0BAAMa,SAAUL,IACb,+BACE,2BAAOM,KAAK,OAAOd,MAAO7C,EAAOiD,SAAU,SAAAW,GAAC,OAAI3D,EAAS2D,EAAET,OAAON,aAIxE,+CACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOzB,GAAe6B,SAAU,SAAAW,GAAC,OAAIvC,GAAiBuC,EAAET,OAAON,aAIxF,yCACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOrC,GAASyC,SAAU,SAAAW,GAAC,OAAInD,GAAWmD,EAAET,OAAON,aAI5E,mDACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOnC,GAAkBuC,SAAU,SAAAW,GAAC,OAAIjD,GAAoBiD,EAAET,OAAON,aAI9F,gDACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAO3B,GAAe+B,SAAU,SAAAW,GAAC,OAAIzC,GAAiByC,EAAET,OAAON,aAIxF,uCACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOvD,EAAO2D,SAAU,SAAAW,GAAC,OAAIrE,EAASqE,EAAET,OAAON,aAIxE,+CACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOrD,EAAeyD,SAAU,SAAAW,GAAC,OAAInE,EAAiBmE,EAAET,OAAON,aAIxF,sDACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOjD,EAAiBqD,SAAU,SAAAW,GAAC,OAAI/D,EAAmB+D,EAAET,OAAON,aAI5F,gDACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAO/C,EAAemD,SAAU,SAAAW,GAAC,OAAI7D,EAAiB6D,EAAET,OAAON,aAIxF,2CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOvC,GAAU2C,SAAU,SAAAW,GAAC,OAAIrD,GAAYqD,EAAET,OAAON,aAI9E,wCACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAO3D,EAAO+D,SAAU,SAAAW,GAAC,OAAIzE,EAASyE,EAAET,OAAON,aAIxE,4CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOvB,GAAU2B,SAAU,SAAAW,GAAC,OAAIrC,GAAYqC,EAAET,OAAON,aAI9E,0CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOzD,EAAS6D,SAAU,SAAAW,GAAC,OAAIvE,EAAWuE,EAAET,OAAON,aAI5E,yCACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOnD,EAAQuD,SAAU,SAAAW,GAAC,OAAIjE,EAAUiE,EAAET,OAAON,aAI1E,4CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOrB,GAAWyB,SAAU,SAAAW,GAAC,OAAInC,GAAamC,EAAET,OAAON,aAIhF,4CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOnB,GAAWuB,SAAU,SAAAW,GAAC,OAAIjC,GAAaiC,EAAET,OAAON,aAIhF,0CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOjB,GAASqB,SAAU,SAAAW,GAAC,OAAI/B,GAAW+B,EAAET,OAAON,aAI5E,4CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOf,GAAUmB,SAAU,SAAAW,GAAC,OAAI7B,GAAY6B,EAAET,OAAON,aAI9E,+CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAO/B,GAAOmC,SAAU,SAAAW,GAAC,OAAI7C,GAAS6C,EAAET,OAAON,aAIxE,4CACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOX,GAAWe,SAAU,SAAAW,GAAC,OAAIzB,GAAayB,EAAET,OAAON,aAIhF,iDACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOjC,GAAYqC,SAAU,SAAAW,GAAC,OAAI/C,GAAc+C,EAAET,OAAON,aAIlF,mDACA,0BAAMa,SAAUL,IACZ,+BACE,2BAAOM,KAAK,OAAOd,MAAOb,GAAUiB,SAAU,SAAAW,GAAC,OAAI3B,GAAY2B,EAAET,OAAON,aAI9E,0DACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAO7B,GAAaiC,SAAU,SAAAW,GAAC,OAAI3C,GAAe2C,EAAET,OAAON,aAIpF,2DACE,0BAAMa,SAAUL,IACd,+BACE,2BAAOM,KAAK,OAAOd,MAAOH,GAASO,SAAU,SAAAW,GAAC,OAAIjB,GAAWiB,EAAET,OAAON,cAK9E,6BACA,uBAAGgB,MAAO,CAACC,UAAW,SAAUC,UAAW,SAA3C,sBACA,uBAAGF,MAAO,CAACC,UAAW,SAAUC,UAAW,SAA3C,sBAAwEvB,GAAYF,IAAa,GAAjG,4CAA+IE,GAAYF,IAAa,GAAI,GAAG,IAC/K,uBAAGuB,MAAO,CAACC,UAAW,SAAUC,UAAW,SAA3C,oBACA,uBAAGF,MAAO,CAACC,UAAW,SAAUC,UAAW,SAA3C,iCAA+EzB,GAA/E,wBAA0GE,GAA1G,oBAA+HxD,EAA/H,yBAAoJoD,GAApJ,4BAAgLlC,EAAhL,YAA4LE,EAA5L,YAA2MJ,EAA3M,YAAoNoB,GAApN,YAAqOZ,GAArO,YAAgPE,GAAhP,YAAoQQ,GAApQ,YAAqR5B,EAArR,YAA8RE,EAA9R,YAA+SwE,KAAKC,MAAOvE,EAAOE,EAAiB,KAAnV,YAA2VE,EAA3V,YAA4WQ,GAA5W,YAAwXpB,EAAxX,YAAiYoC,GAAjY,YAA6YlC,EAA7Y,YAAwZM,EAAxZ,YAAka8B,GAAla,YAA+aE,GAA/a,YAA4bE,GAA5b,YAAucE,GAAvc,YAAmdhB,GAAnd,YAA4doB,GAA5d,YAAye8B,KAAKC,MAAc,GAARvB,IAAY9B,GAAW,MAA3gB,YAA6hB,IAAToB,GAAphB,YAAqiBgC,KAAKC,MAAOnD,GAAME,GAAa,KAApkB,Y,QE5PKkD,MAhBf,WACI,OACQ,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQX,UAAU,mBAAmBY,MAAM,OAClD,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,OACf,yBACIC,IAAI,GACJC,IAAKC,EAAQ,IACbC,MAAM,MACNC,OAAO,KACPnB,UAAU,6BACX,O,iEC+BRoB,E,2MAtCbC,MAAQ,CACNC,SAAS,EACTC,MAAO,KACPC,MAAO,KACPC,iBAAkB,KAClBC,QAAQ,G,2MAII,+C,SACWC,MADX,gD,cACNC,E,gBACaA,EAASC,O,OAAtBC,E,OACNC,KAAKC,SAAS,CAACP,iBAAiBK,EAAK,GAAIG,MAAM,GAAIR,iBAAiB,GAAIH,SAAQ,IAChFS,KAAKC,SAAS,CAACT,MAAMO,EAAK,KAC1BI,QAAQC,IAAIL,EAAK,GAAIG,MAAM,GAAIR,iBAAiB,I,sIAKhD,OAAIM,KAAKV,MAAMC,QACN,yBAAKlB,MAAO,CAACC,UAAW,SAAU+B,SAAU,SACjD,yBAAKpB,IAAKC,EAAQ,IAAwBb,MAAO,CAACzB,SAAU,WAAY0D,QAAS,QAASC,WAAY,OAAQC,YAAa,OAAQjC,UAAW,WADzI,0BAMJyB,KAAKV,MAAMC,aAAhB,EAES,6BACH,yBAAKtB,UAAU,WACb,kBAAC,EAAD,Y,GAhCOwC,IAAMC,WCGzBC,SAASC,MAAQ,iCACjBD,SAASE,YAAc,0GAqBRC,MAXf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK7C,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCZY8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1B,MACvB,2DCXN2B,IAASC,OAAO,kBAAC,IAAD,CAAQC,KAAMC,eAA8B,kBAAC,EAAD,OAAkBX,SAASY,eAAe,SD4HhG,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.ff20680e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-iossa-black.99f3be65.png\";","module.exports = __webpack_public_path__ + \"static/media/iossa.d999c4f9.gif\";","import React, {useState, useEffect} from 'react'\nimport { useInput } from '../hooks/input-hook';\n\nimport '../App.css';\n\nfunction Fixer(){\n\n    //Creamos los hooks que usaremos a lo largo de todo el programa para identificar las estadisticas\n    const [name, setName] = useState(0);\n    const [team, setTeam] = useState(0);\n    const [steamID, setSteamID] = useState(0);\n    const [goals, setGoals] = useState(0);\n    const [matches, setMatches] = useState(0);\n    const [assists, setAssists] = useState(0);\n    const [shots, setShots] = useState(0);\n    const [shotsontarget, setShotsontarget] = useState(0);\n    const [passes, setPasses] = useState(0);\n    const [passescompleted, setPassescompleted] = useState(0);\n    const [interceptions, setInterceptions] = useState(0);\n    const [fouls, setFouls] = useState(0);\n    const [redcards, setRedcards] = useState(0);\n    const [yellowcards, setYellowcards] = useState(0);\n    const [offsides, setOffsides] = useState(0);\n    const [tackles, setTackles] = useState(0);\n    const [tacklescompleted, setTacklescompleted] = useState(0);\n    const [possession, setPossession] = useState(0);\n    const [saves, setSaves] = useState(0);\n    const [savescaught, setSavescaught] = useState(0);\n    const [goalsconceded, setGoalsconceded] = useState(0);\n    const [foulsSuffered, setFoulsSuffered] = useState(0);\n    const [owngoals, setOwngoals] = useState(0);\n    const [freekicks, setFreekicks] = useState(0);\n    const [penalties, setPenalties] = useState(0);\n    const [corners, setCorners] = useState(0);\n    const [throwins, setThrowins] = useState(0);\n    const [keepersaves, setKeepersaves] = useState(0);\n    const [distance, setDistance] = useState(0);\n    const [goalkicks, setGoalkicks] = useState(0);\n    const [position, setPosition] = useState(0);\n    const [startsecond, setStartsecond] = useState(0);\n    const [endsecond, setEndsecond] = useState(0);\n    const [secondsplayed, setSecondsplayed] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [totalmatches, setTotalmatches] = useState(0);\n\n    const { value, bind, reset } = useInput('');\n\n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      alert(`Submitting Name ${value}`);\n      reset();  \n    }\n\n    return(\n      <div>\n        <div>\n          <ul className=\"columnas\">\n            <li>Start Second\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={startsecond} onChange={e => setStartsecond(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>End Second\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={endsecond} onChange={e => setEndsecond(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>Team\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={team} onChange={e => setTeam(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>Position\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={position} onChange={e => setPosition(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>0: Redcards \n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={redcards} onChange={e => setRedcards(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>1: Yellowcards\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={yellowcards} onChange={e => setYellowcards(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>2: fouls\n             <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={fouls} onChange={e => setFouls(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>3: foulsSuffered\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={foulsSuffered} onChange={e => setFoulsSuffered(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>4: tackles\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={tackles} onChange={e => setTackles(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>5: tackles completed\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={tacklescompleted} onChange={e => setTacklescompleted(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>6: goals conceded\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={goalsconceded} onChange={e => setGoalsconceded(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>7: shots\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={shots} onChange={e => setShots(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>8: shots on goal\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={shotsontarget} onChange={e => setShotsontarget(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>9: passes completed (%)\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={passescompleted} onChange={e => setPassescompleted(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>10: interceptions\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={interceptions} onChange={e => setInterceptions(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>11: offsides\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={offsides} onChange={e => setOffsides(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>12: goals\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={goals} onChange={e => setGoals(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>13: own goals\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={owngoals} onChange={e => setOwngoals(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>14: assists\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={assists} onChange={e => setAssists(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>15: passes\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={passes} onChange={e => setPasses(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>16: freekicks\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={freekicks} onChange={e => setFreekicks(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>17: penalties\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={penalties} onChange={e => setPenalties(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>18: corners\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={corners} onChange={e => setCorners(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>19: throw ins\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={throwins} onChange={e => setThrowins(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>20: keeper saves\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={saves} onChange={e => setSaves(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>21: goalkicks\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={goalkicks} onChange={e => setGoalkicks(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>22: possession (%)\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={possession} onChange={e => setPossession(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>23: distance covered\n            <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={distance} onChange={e => setDistance(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>24: keeper saves caught (%)\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={savescaught} onChange={e => setSavescaught(e.target.value)} />\n                </label>\n              </form>\n            </li>\n            <li>Minutos reales a representar\n              <form onSubmit={handleSubmit}>\n                <label>\n                  <input type=\"text\" value={minutes} onChange={e => setMinutes(e.target.value)} />\n                </label>\n              </form>\n            </li>\n          </ul>\n          <div>\n          <p style={{textAlign: 'center', marginTop: '50px'}}>Guia para minutos:</p>\n          <p style={{textAlign: 'center', marginTop: '10px'}}>Minutos jugados = {(endsecond - startsecond)/60} / Minutos Reales (10 min por tiempo) = {((endsecond - startsecond)/60)*10/45}</p>\n          <p style={{textAlign: 'center', marginTop: '30px'}}>Resultado Final:</p>\n          <p style={{textAlign: 'center', marginTop: '10px'}}>{`{\"info\":{\"startSecond\":${startsecond},\"endSecond\":${endsecond},\"team\":\"${team}\",\"position\":\"${position}\"},\"statistics\":[${redcards},${yellowcards},${fouls},${foulsSuffered},${tackles},${tacklescompleted},${goalsconceded},${shots},${shotsontarget},${Math.round((passes*passescompleted)/100)},${interceptions},${offsides},${goals},${owngoals},${assists},${passes},${freekicks},${penalties},${corners},${throwins},${saves},${goalkicks},${Math.round(minutes*60*(possession/100))},${distance*1000},${Math.round((saves*savescaught)/100)}]},`}</p>\n          </div>\n        </div>\n      </div>\n    )\n\n}\n\nexport default Fixer","import { useState } from \"react\";\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};","import React from 'react';\nimport { Button, Navbar } from 'react-bootstrap';\nimport '../App.css'\n\nfunction Nav(){\n    return(\n            <Navbar bg=\"light\" className=\"header-container\" fixed=\"top\">\n                <Navbar.Brand href=\"../\">\n                    <img\n                        alt=\"\"\n                        src={require(`../images/logo-iossa-black.png`)}\n                        width=\"194\"\n                        height=\"50\"\n                        className=\"d-inline-block align-top\"\n                    />{' '}\n                </Navbar.Brand>\n            </Navbar>\n    )\n}\n\nexport default Nav","import React, { useState } from 'react';\nimport '../App.css';\n\nimport Fixer from \"../Components/Fixer\"\n\nclass Json extends React.Component {\n  \n  state = {\n    loading: true,\n    match: null,\n    steam: null,\n    playerStatistics: null,\n    switch: false\n  }\n\n  async componentDidMount() {\n    const url = \"https://stats.iosoccer-sa.bid/api/everything\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({playerStatistics:data[0]. teams[1]. playerStatistics[0], loading:false}); \n    this.setState({match:data[0]});\n    console.log(data[0]. teams[1]. playerStatistics[0]);\n  }\n\n  render() {\n    \n    if (this.state.loading) {\n      return <div style={{textAlign: 'center', fontSize: '30px'}}>\n        <img src={require(`../images/iossa.gif`)} style={{position: 'relative', display: 'block', marginLeft: 'auto', marginRight: 'auto', marginTop: '100px'}}></img> \n        Cargando base de datos\n        </div>\n    }\n    \n    if (!this.state.loading) { \n\n      return <div>\n          <div className=\"espacio\"> \n            <Fixer />\n          </div>\n        </div>\n      }  \n    }\n    \n}\n\nexport default Json;","import React, { useState } from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Fixer from \"./Components/Fixer\"\nimport Nav from \"./Components/Nav\"\nimport Json from \"./Pages/Json\"\n\ndocument.title = \"IOSoccer Sudamerica JSON Fixer\";\ndocument.description = \"Sitio web utilizado como herramienta para arreglar estadisticas de la comunidad de IOSoccer Sudamerica.\";\n\n/*<Switch>\n          <Route path=\"/db\" exact component={Db} />\n          <Route path=\"/players\" component={Home} />\n          <Route path=\"/\" exact component={Profile} />\n          <Route path=\"/teams\" exact component={Teams} />\n          <Route path=\"/table\" exact component={Table} />\n</Switch>*/\n\nfunction App(){\n  return(\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Json />\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router path={process.env.PUBLIC_URL + '/'}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}